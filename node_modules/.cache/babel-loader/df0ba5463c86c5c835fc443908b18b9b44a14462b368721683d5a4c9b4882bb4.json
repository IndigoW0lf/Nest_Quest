{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Legend, Cell, ResponsiveContainer } from 'recharts';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemographicsPieChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cityOptions, setCityOptions] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => {\n      setData(jsonData);\n      setCityOptions(jsonData.map(city => ({\n        value: city.City,\n        label: city.City\n      })));\n    }).catch(error => console.error(\"Error fetching data: \", error));\n  }, []);\n  const selectedCityData = data.find(city => city.City === (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.value));\n  const demographicsData = selectedCityData ? [{\n    name: \"White population alone\",\n    value: selectedCityData[\"White population alone\"]\n  }, {\n    name: \"Native Hawaiian and Other Pacific Islander population alone\",\n    value: selectedCityData[\"Native Hawaiian and Other Pacific Islander population alone\"]\n  }, {\n    name: \"Population of Two or More Races\",\n    value: selectedCityData[\"Population of Two or More Races\"]\n  }, {\n    name: \"Hispanic or Latino population\",\n    value: selectedCityData[\"Hispanic or Latino population\"]\n  }] : [];\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: cityOptions,\n      onChange: setSelectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: demographicsData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 150,\n          fill: \"#8884d8\",\n          label: true,\n          children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieChart, \"BI1Ud7u/vcZvzrH9Wt1YRKeWva4=\");\n_c = DemographicsPieChart;\nexport default DemographicsPieChart;\nvar _c;\n$RefreshReg$(_c, \"DemographicsPieChart\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Legend","Cell","ResponsiveContainer","Select","jsxDEV","_jsxDEV","DemographicsPieChart","_s","data","setData","selectedCity","setSelectedCity","cityOptions","setCityOptions","fetch","then","response","json","jsonData","map","city","value","City","label","catch","error","console","selectedCityData","find","demographicsData","name","COLORS","children","options","onChange","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","entry","index","length","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Legend, Cell, ResponsiveContainer } from 'recharts';\nimport Select from 'react-select';\n\nconst DemographicsPieChart = () => {\n  const [data, setData] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cityOptions, setCityOptions] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then(response => response.json())\n      .then(jsonData => {\n        setData(jsonData);\n        setCityOptions(jsonData.map(city => ({ value: city.City, label: city.City })));\n      })\n      .catch(error => console.error(\"Error fetching data: \", error));\n  }, []);\n\n  const selectedCityData = data.find(city => city.City === selectedCity?.value);\n\n  const demographicsData = selectedCityData ? [\n    { name: \"White population alone\", value: selectedCityData[\"White population alone\"] },\n    { name: \"Native Hawaiian and Other Pacific Islander population alone\", value: selectedCityData[\"Native Hawaiian and Other Pacific Islander population alone\"] },\n    { name: \"Population of Two or More Races\", value: selectedCityData[\"Population of Two or More Races\"] },\n    { name: \"Hispanic or Latino population\", value: selectedCityData[\"Hispanic or Latino population\"] }\n  ] : [];\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <div>\n      <Select options={cityOptions} onChange={setSelectedCity} />\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <PieChart>\n          <Pie data={demographicsData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={150} fill=\"#8884d8\" label>\n            {demographicsData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default DemographicsPieChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}