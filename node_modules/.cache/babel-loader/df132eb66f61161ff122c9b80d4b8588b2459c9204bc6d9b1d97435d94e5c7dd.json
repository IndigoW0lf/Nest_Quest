{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDemographicsPieChart = ({\n  cityData\n}) => {\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  const demographicsData = [{\n    name: 'White population alone',\n    value: cityData['White population alone']\n  }, {\n    name: 'Native Hawaiian and Other Pacific Islander population alone',\n    value: cityData['Native Hawaiian and Other Pacific Islander population alone']\n  }, {\n    name: 'Population of Two or More Races',\n    value: cityData['Population of Two or More Races']\n  }, {\n    name: 'Hispanic or Latino population',\n    value: cityData['Hispanic or Latino population']\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: 200,\n    height: 200,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: demographicsData,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        label: true,\n        children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = CityDemographicsPieChart;\nconst DemographicsPieCharts = () => {\n  _s();\n  const [citiesData, setCitiesData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => setCitiesData(jsonData)).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    },\n    children: [citiesData.map(cityData => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: cityData.City\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CityDemographicsPieChart, {\n        cityData: cityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, cityData.City, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#0088FE'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" White population alone\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#00C49F'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \" Native Hawaiian and Other Pacific Islander population alone\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFBB28'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \" Population of Two or More Races\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FF8042'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \" Hispanic or Latino population\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieCharts, \"nWytfSIjcq1outeTb10vBKltFEE=\");\n_c2 = DemographicsPieCharts;\nexport default DemographicsPieCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDemographicsPieChart\");\n$RefreshReg$(_c2, \"DemographicsPieCharts\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","CityDemographicsPieChart","cityData","COLORS","demographicsData","name","value","width","height","children","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","map","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","DemographicsPieCharts","_s","citiesData","setCitiesData","fetch","then","response","json","jsonData","catch","error","console","style","display","flexWrap","justifyContent","alignItems","margin","textAlign","City","color","_c2","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer } from 'recharts';\n\nconst CityDemographicsPieChart = ({ cityData }) => {\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  const demographicsData = [\n    {\n      name: 'White population alone',\n      value: cityData['White population alone'],\n    },\n    {\n      name: 'Native Hawaiian and Other Pacific Islander population alone',\n      value:\n        cityData['Native Hawaiian and Other Pacific Islander population alone'],\n    },\n    {\n      name: 'Population of Two or More Races',\n      value: cityData['Population of Two or More Races'],\n    },\n    {\n      name: 'Hispanic or Latino population',\n      value: cityData['Hispanic or Latino population'],\n    },\n  ];\n\n  return (\n    <ResponsiveContainer width={200} height={200}>\n      <PieChart>\n        <Pie\n          data={demographicsData}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={80}\n          fill=\"#8884d8\"\n          label\n        >\n          {demographicsData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst DemographicsPieCharts = () => {\n  const [citiesData, setCitiesData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((jsonData) => setCitiesData(jsonData))\n      .catch((error) => console.error('Error fetching data: ', error));\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n      }}\n    >\n      {citiesData.map((cityData) => (\n        <div key={cityData.City} style={{ margin: '20px' }}>\n          <h3 style={{ textAlign: 'center' }}>{cityData.City}</h3>\n          <CityDemographicsPieChart cityData={cityData} />\n        </div>\n      ))}\n      {/* Unified Map Key */}\n      <div>\n        <h3>Map Key</h3>\n        <p>\n          <span style={{ color: '#0088FE' }}>■</span> White population alone\n        </p>\n        <p>\n          <span style={{ color: '#00C49F' }}>■</span> Native Hawaiian and Other\n          Pacific Islander population alone\n        </p>\n        <p>\n          <span style={{ color: '#FFBB28' }}>■</span> Population of Two or More\n          Races\n        </p>\n        <p>\n          <span style={{ color: '#FF8042' }}>■</span> Hispanic or Latino\n          population\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DemographicsPieCharts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}