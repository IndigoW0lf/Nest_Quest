{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopulationGrowthChart() {\n  _s();\n  const [chartsData, setChartsData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const transformData = data => {\n    return data.map(row => {\n      const category = row['Category'];\n      const entries = Object.entries(row).filter(([key, value]) => key !== 'Category');\n      const chartData = entries.map(([city, value]) => ({\n        name: city,\n        value: parseFloat(value) || 0\n      }));\n      return {\n        category,\n        chartData\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartsData.map(({\n      category,\n      chartData\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(PopulationGrowthChart, \"SmRKPmQRofyNxN4Dk0RXDHGaeC4=\");\n_c = PopulationGrowthChart;\nexport default PopulationGrowthChart;\nvar _c;\n$RefreshReg$(_c, \"PopulationGrowthChart\");","map":{"version":3,"names":["React","useState","useEffect","Papa","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","PopulationGrowthChart","_s","chartsData","setChartsData","fetch","then","response","json","data","setData","catch","error","console","transformData","map","row","category","entries","Object","filter","key","value","chartData","city","name","parseFloat","children","index","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nfunction PopulationGrowthChart() {\n  const [chartsData, setChartsData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((data) => setData(data))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n\n  const transformData = (data) => {\n    return data.map((row) => {\n      const category = row['Category'];\n      const entries = Object.entries(row).filter(\n        ([key, value]) => key !== 'Category'\n      );\n      const chartData = entries.map(([city, value]) => ({\n        name: city,\n        value: parseFloat(value) || 0,\n      }));\n      return { category, chartData };\n    });\n  };\n\n  return (\n    <div>\n      {chartsData.map(({ category, chartData }, index) => (\n        <div key={index}>\n          <h3>{category}</h3>\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart\n              data={chartData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"value\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default PopulationGrowthChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}