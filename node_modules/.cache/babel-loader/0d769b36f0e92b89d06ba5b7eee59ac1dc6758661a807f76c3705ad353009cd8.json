{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Cell, ResponsiveContainer, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDemographicsPieChart = ({\n  cityData\n}) => {\n  const COLORS = ['#ffb5a7', '#b8c0a2', '#fde2e4', '#e2ece9']; // Adjusted colors to your theme\n  const demographicsData = [{\n    name: 'White population',\n    value: cityData['White population alone']\n  }, {\n    name: 'Native Hawaiian and Pacific Islander',\n    value: cityData['Native Hawaiian and Other Pacific Islander population alone']\n  }, {\n    name: 'Two or More Races',\n    value: cityData['Population of Two or More Races']\n  }, {\n    name: 'Hispanic or Latino',\n    value: cityData['Hispanic or Latino population']\n  }];\n\n  // Reduce outerRadius from 100 to 70 to make pies smaller and fit labels\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 220,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: demographicsData,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 70,\n        fill: \"#8884d8\",\n        label: ({\n          name,\n          percent\n        }) => `${name}: ${(percent * 100).toFixed(1)}%`,\n        children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = CityDemographicsPieChart;\nconst DemographicsPieCharts = ({\n  data\n}) => {\n  _s();\n  const [citiesData, setCitiesData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => setCitiesData(jsonData)).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#6d6875'\n      },\n      children: \"City Demographics Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Map Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#ffb5a7'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" White population\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#b8c0a2'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" Native Hawaiian and Pacific Islander\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#fde2e4'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \" Two or More Races\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#e2ece9'\n          },\n          children: \"\\u25A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \" Hispanic or Latino\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        alignItems: 'top'\n      },\n      children: citiesData.map(cityData => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%',\n          margin: '10px',\n          padding: '10px',\n          boxSizing: 'border-box'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center',\n            color: '#6d6875'\n          },\n          children: cityData.City\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CityDemographicsPieChart, {\n          cityData: cityData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, cityData.City, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieCharts, \"nWytfSIjcq1outeTb10vBKltFEE=\");\n_c2 = DemographicsPieCharts;\nexport default DemographicsPieCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDemographicsPieChart\");\n$RefreshReg$(_c2, \"DemographicsPieCharts\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Cell","ResponsiveContainer","Legend","jsxDEV","_jsxDEV","CityDemographicsPieChart","cityData","COLORS","demographicsData","name","value","width","height","children","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","percent","toFixed","map","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","DemographicsPieCharts","_s","citiesData","setCitiesData","fetch","then","response","json","jsonData","catch","error","console","style","textAlign","color","marginBottom","display","flexDirection","flexWrap","justifyContent","alignItems","margin","padding","boxSizing","City","_c2","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  ResponsiveContainer,\n  Legend,\n} from 'recharts';\n\nconst CityDemographicsPieChart = ({ cityData }) => {\n  const COLORS = ['#ffb5a7', '#b8c0a2', '#fde2e4', '#e2ece9']; // Adjusted colors to your theme\n  const demographicsData = [\n    { name: 'White population', value: cityData['White population alone'] },\n    {\n      name: 'Native Hawaiian and Pacific Islander',\n      value:\n        cityData['Native Hawaiian and Other Pacific Islander population alone'],\n    },\n    {\n      name: 'Two or More Races',\n      value: cityData['Population of Two or More Races'],\n    },\n    {\n      name: 'Hispanic or Latino',\n      value: cityData['Hispanic or Latino population'],\n    },\n  ];\n\n  // Reduce outerRadius from 100 to 70 to make pies smaller and fit labels\n  return (\n    <ResponsiveContainer width=\"100%\" height={220}>\n      <PieChart>\n        <Pie\n          data={demographicsData}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={70}\n          fill=\"#8884d8\"\n          label={({ name, percent }) =>\n            `${name}: ${(percent * 100).toFixed(1)}%`\n          }\n        >\n          {demographicsData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst DemographicsPieCharts = ({ data }) => {\n  const [citiesData, setCitiesData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((jsonData) => setCitiesData(jsonData))\n      .catch((error) => console.error('Error fetching data: ', error));\n  }, []);\n\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center', color: '#6d6875' }}>\n        City Demographics Overview\n      </h2>\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n        {/* Map Key */}\n        <h3>Map Key</h3>\n        <p>\n          <span style={{ color: '#ffb5a7' }}>â– </span> White population\n        </p>\n        <p>\n          <span style={{ color: '#b8c0a2' }}>â– </span> Native Hawaiian and\n          Pacific Islander\n        </p>\n        <p>\n          <span style={{ color: '#fde2e4' }}>â– </span> Two or More Races\n        </p>\n        <p>\n          <span style={{ color: '#e2ece9' }}>â– </span> Hispanic or Latino\n        </p>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-around',\n          alignItems: 'top',\n        }}\n      >\n        {citiesData.map((cityData) => (\n          <div\n            key={cityData.City}\n            style={{\n              width: '30%',\n              margin: '10px',\n              padding: '10px',\n              boxSizing: 'border-box',\n            }}\n          >\n            <h3 style={{ textAlign: 'center', color: '#6d6875' }}>\n              {cityData.City}\n            </h3>\n            <CityDemographicsPieChart cityData={cityData} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DemographicsPieCharts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}