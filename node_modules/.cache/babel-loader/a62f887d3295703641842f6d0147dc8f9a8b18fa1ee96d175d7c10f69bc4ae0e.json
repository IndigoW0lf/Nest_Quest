{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/Sidebar.js\";\nimport Slider from '@mui/material/Slider'; // Assuming you're using MUI components\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  filters,\n  setFilters,\n  cities\n}) => {\n  // Handler for changing the median income range\n  const handleIncomeChange = (event, newValue) => {\n    setFilters({\n      ...filters,\n      medianIncomeRange: newValue\n    });\n  };\n\n  // Handler for toggling city selection\n  const handleCityChange = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    const newLocations = checked ? [...filters.location, name] : filters.location.filter(city => city !== name);\n    setFilters({\n      ...filters,\n      location: newLocations\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      value: filters.medianIncomeRange,\n      onChange: handleIncomeChange,\n      valueLabelDisplay: \"auto\",\n      min: 0,\n      max: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), cities.map(city => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: filters.location.includes(city),\n        onChange: handleCityChange,\n        name: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this),\n      label: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["Slider","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","Sidebar","filters","setFilters","cities","handleIncomeChange","event","newValue","medianIncomeRange","handleCityChange","name","checked","target","newLocations","location","filter","city","children","value","onChange","valueLabelDisplay","min","max","fileName","_jsxFileName","lineNumber","columnNumber","map","control","includes","label","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/Sidebar.js"],"sourcesContent":["import Slider from '@mui/material/Slider'; // Assuming you're using MUI components\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nconst Sidebar = ({ filters, setFilters, cities }) => {\n  // Handler for changing the median income range\n  const handleIncomeChange = (event, newValue) => {\n    setFilters({ ...filters, medianIncomeRange: newValue });\n  };\n\n  // Handler for toggling city selection\n  const handleCityChange = (event) => {\n    const { name, checked } = event.target;\n    const newLocations = checked\n      ? [...filters.location, name]\n      : filters.location.filter((city) => city !== name);\n\n    setFilters({ ...filters, location: newLocations });\n  };\n\n  return (\n    <div>\n      {/* Slider for median income range */}\n      <Slider\n        value={filters.medianIncomeRange}\n        onChange={handleIncomeChange}\n        valueLabelDisplay=\"auto\"\n        min={0}\n        max={200000}\n      />\n      {/* Checkboxes for cities */}\n      {cities.map((city) => (\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={filters.location.includes(city)}\n              onChange={handleCityChange}\n              name={city}\n            />\n          }\n          label={city}\n        />\n      ))}\n      {/* Add more controls as needed */}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EACnD;EACA,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC9CJ,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAEM,iBAAiB,EAAED;IAAS,CAAC,CAAC;EACzD,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIH,KAAK,IAAK;IAClC,MAAM;MAAEI,IAAI;MAAEC;IAAQ,CAAC,GAAGL,KAAK,CAACM,MAAM;IACtC,MAAMC,YAAY,GAAGF,OAAO,GACxB,CAAC,GAAGT,OAAO,CAACY,QAAQ,EAAEJ,IAAI,CAAC,GAC3BR,OAAO,CAACY,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKN,IAAI,CAAC;IAEpDP,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAEY,QAAQ,EAAED;IAAa,CAAC,CAAC;EACpD,CAAC;EAED,oBACEb,OAAA;IAAAiB,QAAA,gBAEEjB,OAAA,CAACJ,MAAM;MACLsB,KAAK,EAAEhB,OAAO,CAACM,iBAAkB;MACjCW,QAAQ,EAAEd,kBAAmB;MAC7Be,iBAAiB,EAAC,MAAM;MACxBC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EAEDtB,MAAM,CAACuB,GAAG,CAAEX,IAAI,iBACfhB,OAAA,CAACF,gBAAgB;MACf8B,OAAO,eACL5B,OAAA,CAACH,QAAQ;QACPc,OAAO,EAAET,OAAO,CAACY,QAAQ,CAACe,QAAQ,CAACb,IAAI,CAAE;QACzCG,QAAQ,EAAEV,gBAAiB;QAC3BC,IAAI,EAAEM;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACF;MACDI,KAAK,EAAEd;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACK,EAAA,GA1CI9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}