{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChartComponent() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(data => {\n      const formattedData = data.map(item => ({\n        name: item.City,\n        value: item.Population,\n        category: item.Category\n      }));\n      setData(formattedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 600,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MyChartComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MyChartComponent;\nexport default MyChartComponent;\nvar _c;\n$RefreshReg$(_c, \"MyChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","MyChartComponent","_s","data","setData","fetch","then","response","json","formattedData","map","item","name","City","value","Population","category","Category","catch","error","console","width","height","margin","top","right","left","bottom","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n\nfunction MyChartComponent() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedData = data.map((item) => ({\n          name: item.City,\n          value: item.Population,\n          category: item.Category,\n        }));\n        setData(formattedData);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  \n  return (\n    <LineChart\n      width={600}\n      height={300}\n      data={data}\n      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"value\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n    </LineChart>\n  );\n}\n\nexport default MyChartComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAK;MACd,MAAMM,aAAa,GAAGN,IAAI,CAACO,GAAG,CAAEC,IAAI,KAAM;QACxCC,IAAI,EAAED,IAAI,CAACE,IAAI;QACfC,KAAK,EAAEH,IAAI,CAACI,UAAU;QACtBC,QAAQ,EAAEL,IAAI,CAACM;MACjB,CAAC,CAAC,CAAC;MACHb,OAAO,CAACK,aAAa,CAAC;IACxB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEnB,OAAA,CAACR,SAAS;IACR6B,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZnB,IAAI,EAAEA,IAAK;IACXoB,MAAM,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAEnD5B,OAAA,CAACJ,aAAa;MAACiC,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCjC,OAAA,CAACN,KAAK;MAACwC,OAAO,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBjC,OAAA,CAACL,KAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjC,OAAA,CAACH,OAAO;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXjC,OAAA,CAACF,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjC,OAAA,CAACP,IAAI;MACH0C,IAAI,EAAC,UAAU;MACfD,OAAO,EAAC,OAAO;MACfE,MAAM,EAAC,SAAS;MAChBC,SAAS,EAAE;QAAEC,CAAC,EAAE;MAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAAC/B,EAAA,CAtCQD,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAwCzB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}