{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => setCities(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [39.8283, -98.5795],\n    zoom: 4,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [city.lat, city.lon],\n      radius: Math.sqrt(city.population) / 100 // Adjust the size based on the population\n      ,\n      fillColor: \"#f28f3b\",\n      color: \"#000\",\n      weight: 1,\n      opacity: 0.5,\n      fillOpacity: 0.5,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: [city.name, \" - Population: \", city.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","CircleMarker","Tooltip","jsxDEV","_jsxDEV","MapComponent","_s","cities","setCities","fetch","then","response","json","data","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","city","index","lat","lon","radius","Math","sqrt","population","fillColor","color","weight","opacity","fillOpacity","name","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/MapComponent.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = () => {\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data')\n      .then((response) => response.json())\n      .then((data) => setCities(data));\n  }, []);\n\n  return (\n    <MapContainer\n      center={[39.8283, -98.5795]}\n      zoom={4}\n      style={{ height: '400px', width: '100%' }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {cities.map((city, index) => (\n        <CircleMarker\n          key={index}\n          center={[city.lat, city.lon]}\n          radius={Math.sqrt(city.population) / 100} // Adjust the size based on the population\n          fillColor=\"#f28f3b\"\n          color=\"#000\"\n          weight={1}\n          opacity={0.5}\n          fillOpacity={0.5}\n        >\n          <Tooltip>\n            {city.name} - Population: {city.population}\n          </Tooltip>\n        </CircleMarker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default MapComponent;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAC9E,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACL,YAAY;IACXe,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAE;IAC5BC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAE1Cf,OAAA,CAACJ,SAAS;MACRoB,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,EACDlB,MAAM,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBxB,OAAA,CAACH,YAAY;MAEXa,MAAM,EAAE,CAACa,IAAI,CAACE,GAAG,EAAEF,IAAI,CAACG,GAAG,CAAE;MAC7BC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAACN,IAAI,CAACO,UAAU,CAAC,GAAG,GAAI,CAAC;MAAA;MAC1CC,SAAS,EAAC,SAAS;MACnBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAE,CAAE;MACVC,OAAO,EAAE,GAAI;MACbC,WAAW,EAAE,GAAI;MAAApB,QAAA,eAEjBf,OAAA,CAACF,OAAO;QAAAiB,QAAA,GACLQ,IAAI,CAACa,IAAI,EAAC,iBAAe,EAACb,IAAI,CAACO,UAAU;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC,GAXLG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYE,CACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACnB,EAAA,CArCID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}