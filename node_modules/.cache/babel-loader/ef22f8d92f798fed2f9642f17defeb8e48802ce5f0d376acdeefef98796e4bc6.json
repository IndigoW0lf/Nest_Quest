{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Cell, Legend, ResponsiveContainer, Text } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDemographicsPieChart = ({\n  cityData\n}) => {\n  // Updated color palette to match the website theme\n  const COLORS = ['#ffb5a7', '#b8c0a2', '#fde2e4', '#e2ece9'];\n  const demographicsData = [{\n    name: 'White population',\n    value: parseFloat(cityData['White population alone']).toFixed(1)\n  }, {\n    name: 'Native Hawaiian and Pacific Islander',\n    value: parseFloat(cityData['Native Hawaiian and Other Pacific Islander population alone']).toFixed(1)\n  }, {\n    name: 'Two or More Races',\n    value: parseFloat(cityData['Population of Two or More Races']).toFixed(1)\n  }, {\n    name: 'Hispanic or Latino',\n    value: parseFloat(cityData['Hispanic or Latino population']).toFixed(1)\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 250,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: demographicsData,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        label: ({\n          name,\n          percent\n        }) => `${name}: ${(percent * 100).toFixed(1)}%`,\n        children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = CityDemographicsPieChart;\nconst DemographicsPieCharts = ({\n  data\n}) => {\n  _s();\n  const [citiesData, setCitiesData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => setCitiesData(jsonData)).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#6d6875'\n      },\n      children: \"City Demographics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        color: '#6d6875'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: '150px',\n          marginRight: '20px',\n          color: '#6d6875'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Map Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ffb5a7'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), \" White population\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#b8c0a2'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \" Native Hawaiian and Pacific Islander\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#fde2e4'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), \" Two or More Races\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#e2ece9'\n            },\n            children: \"\\u25A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), \" Hispanic or Latino\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          maxWidth: 'calc(100% - 150px)'\n        },\n        children: citiesData.map(cityData => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '33%',\n            padding: '10px',\n            boxSizing: 'border-box'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: 'center',\n              color: '#6d6875'\n            },\n            children: cityData.City\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CityDemographicsPieChart, {\n            cityData: cityData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, cityData.City, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieCharts, \"nWytfSIjcq1outeTb10vBKltFEE=\");\n_c2 = DemographicsPieCharts;\nexport default DemographicsPieCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDemographicsPieChart\");\n$RefreshReg$(_c2, \"DemographicsPieCharts\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Cell","Legend","ResponsiveContainer","Text","jsxDEV","_jsxDEV","CityDemographicsPieChart","cityData","COLORS","demographicsData","name","value","parseFloat","toFixed","width","height","children","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","percent","map","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","DemographicsPieCharts","_s","citiesData","setCitiesData","fetch","then","response","json","jsonData","catch","error","console","style","textAlign","color","display","flexDirection","minWidth","marginRight","flexWrap","justifyContent","maxWidth","padding","boxSizing","City","_c2","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Cell,\n  Legend,\n  ResponsiveContainer,\n  Text,\n} from 'recharts';\n\nconst CityDemographicsPieChart = ({ cityData }) => {\n  // Updated color palette to match the website theme\n  const COLORS = ['#ffb5a7', '#b8c0a2', '#fde2e4', '#e2ece9'];\n\n  const demographicsData = [\n    {\n      name: 'White population',\n      value: parseFloat(cityData['White population alone']).toFixed(1),\n    },\n    {\n      name: 'Native Hawaiian and Pacific Islander',\n      value: parseFloat(\n        cityData['Native Hawaiian and Other Pacific Islander population alone']\n      ).toFixed(1),\n    },\n    {\n      name: 'Two or More Races',\n      value: parseFloat(cityData['Population of Two or More Races']).toFixed(1),\n    },\n    {\n      name: 'Hispanic or Latino',\n      value: parseFloat(cityData['Hispanic or Latino population']).toFixed(1),\n    },\n  ];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={250}>\n      <PieChart>\n        <Pie\n          data={demographicsData}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={80}\n          fill=\"#8884d8\"\n          label={({ name, percent }) =>\n            `${name}: ${(percent * 100).toFixed(1)}%`\n          }\n        >\n          {demographicsData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst DemographicsPieCharts = ({ data }) => {\n  const [citiesData, setCitiesData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((jsonData) => setCitiesData(jsonData))\n      .catch((error) => console.error('Error fetching data: ', error));\n  }, []);\n\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center', color: '#6d6875' }}>\n        City Demographics\n      </h2>\n      <div style={{ display: 'flex', flexDirection: 'row', color: '#6d6875' }}>\n        {/* Unified Map Key with updated colors */}\n        <div\n          style={{ minWidth: '150px', marginRight: '20px', color: '#6d6875' }}\n        >\n          <h3>Map Key</h3>\n          <p>\n            <span style={{ color: '#ffb5a7' }}>■</span> White population\n          </p>\n          <p>\n            <span style={{ color: '#b8c0a2' }}>■</span> Native Hawaiian and\n            Pacific Islander\n          </p>\n          <p>\n            <span style={{ color: '#fde2e4' }}>■</span> Two or More Races\n          </p>\n          <p>\n            <span style={{ color: '#e2ece9' }}>■</span> Hispanic or Latino\n          </p>\n        </div>\n        {/* Pie Charts */}\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            maxWidth: 'calc(100% - 150px)',\n          }}\n        >\n          {citiesData.map((cityData) => (\n            <div\n              key={cityData.City}\n              style={{ width: '33%', padding: '10px', boxSizing: 'border-box' }}\n            >\n              <h3 style={{ textAlign: 'center', color: '#6d6875' }}>\n                {cityData.City}\n              </h3>\n              <CityDemographicsPieChart cityData={cityData} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DemographicsPieCharts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}