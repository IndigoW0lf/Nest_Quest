{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './App.css';\n// import DataVisualization from './components/DataVisualization';\n// import { ThemeProvider } from '@mui/material/styles';\n// import theme from './theme/theme';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import MapView from './components/MapView';\n// import AppBar from '@mui/material/AppBar';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\n// import Box from '@mui/material/Box';\n// import Container from '@mui/material/Container';\n// import Paper from '@mui/material/Paper';\n// import PopulationGrowthChart from './components/PopulationGrowthChart'; \n\n// function App() {\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <AppBar position=\"static\" color=\"primary\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" color=\"inherit\">\n//             Welcome to Nest Quest\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Container maxWidth=\"lg\">\n//         <Box my={4}>\n//           <Paper elevation={3}>\n//             <Box p={3}>\n//               <DataVisualization />\n//             </Box>\n//             {/* <Box>\n//               <MapView />\n//             </Box> */}\n//             <Box>\n//               <PopulationGrowthChart />\n//             </Box>\n//           </Paper>\n//         </Box>\n//       </Container>\n//       <Box mt={5} py={3} bgcolor=\"primary.main\" color=\"primary.contrastText\">\n//         <Container maxWidth=\"lg\">\n//           <Typography variant=\"body1\">Nest Quest ©2024</Typography>\n//         </Container>\n//       </Box>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComposedChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(data => {\n      // Assuming the backend returns the data in the correct format\n      setData(data);\n    }).catch(error => {\n      console.error('Error fetching data: ', error);\n    });\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  // Function to transform and group your data as needed for the chart\n  const transformData = rawData => {\n    // Implement transformation logic here\n    return rawData; // Placeholder, replace with actual transformation logic\n  };\n  const transformedData = transformData(data);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n      width: 500,\n      height: 400,\n      data: transformedData,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"City\",\n        scale: \"band\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Value\",\n        stroke: \"#ff7300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComposedChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MyComposedChart;\nexport default MyComposedChart;\nvar _c;\n$RefreshReg$(_c, \"MyComposedChart\");","map":{"version":3,"names":["React","useState","useEffect","ComposedChart","Line","Area","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","MyComposedChart","_s","data","setData","fetch","then","response","json","catch","error","console","transformData","rawData","transformedData","width","height","children","margin","top","right","bottom","left","stroke","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","scale","type","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/App.js"],"sourcesContent":["// import React from 'react';\n// import './App.css';\n// import DataVisualization from './components/DataVisualization';\n// import { ThemeProvider } from '@mui/material/styles';\n// import theme from './theme/theme';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import MapView from './components/MapView';\n// import AppBar from '@mui/material/AppBar';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\n// import Box from '@mui/material/Box';\n// import Container from '@mui/material/Container';\n// import Paper from '@mui/material/Paper';\n// import PopulationGrowthChart from './components/PopulationGrowthChart'; \n\n// function App() {\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <AppBar position=\"static\" color=\"primary\">\n//         <Toolbar>\n//           <Typography variant=\"h6\" color=\"inherit\">\n//             Welcome to Nest Quest\n//           </Typography>\n//         </Toolbar>\n//       </AppBar>\n//       <Container maxWidth=\"lg\">\n//         <Box my={4}>\n//           <Paper elevation={3}>\n//             <Box p={3}>\n//               <DataVisualization />\n//             </Box>\n//             {/* <Box>\n//               <MapView />\n//             </Box> */}\n//             <Box>\n//               <PopulationGrowthChart />\n//             </Box>\n//           </Paper>\n//         </Box>\n//       </Container>\n//       <Box mt={5} py={3} bgcolor=\"primary.main\" color=\"primary.contrastText\">\n//         <Container maxWidth=\"lg\">\n//           <Typography variant=\"body1\">Nest Quest ©2024</Typography>\n//         </Container>\n//       </Box>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Line,\n  Area,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst MyComposedChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((data) => {\n        // Assuming the backend returns the data in the correct format\n        setData(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching data: ', error);\n      });\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  // Function to transform and group your data as needed for the chart\n  const transformData = (rawData) => {\n    // Implement transformation logic here\n    return rawData; // Placeholder, replace with actual transformation logic\n  };\n\n  const transformedData = transformData(data);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <ComposedChart\n        width={500}\n        height={400}\n        data={transformedData}\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20,\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"City\" scale=\"band\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        {/* Example: Rendering a Line for a specific category. Adjust as necessary. */}\n        <Line type=\"monotone\" dataKey=\"Value\" stroke=\"#ff7300\" />\n        {/* Add other chart types (Bar, Area, etc.) as needed */}\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default MyComposedChart;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}