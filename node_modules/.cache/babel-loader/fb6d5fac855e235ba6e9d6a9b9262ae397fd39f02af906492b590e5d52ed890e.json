{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechJobStatsChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(fetchedData => {\n      // Assuming your backend sends the data in an appropriate format\n      // Otherwise, adjust the processing logic here\n      setData(fetchedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f5f5f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        yAxisId: \"left\",\n        orientation: \"left\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        yAxisId: \"right\",\n        orientation: \"right\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        yAxisId: \"left\",\n        dataKey: \"Hourly Median Wage\",\n        barSize: 20,\n        fill: \"#413ea0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        yAxisId: \"right\",\n        type: \"monotone\",\n        dataKey: \"Median Gross Rent\",\n        stroke: \"#ff7300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        yAxisId: \"right\",\n        type: \"monotone\",\n        dataKey: \"Total Jobs in Tech Sector\",\n        stroke: \"#387908\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TechJobStatsChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = TechJobStatsChart;\nexport default TechJobStatsChart;\nvar _c;\n$RefreshReg$(_c, \"TechJobStatsChart\");","map":{"version":3,"names":["React","useState","useEffect","ComposedChart","Line","Area","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","TechJobStatsChart","_s","data","setData","fetch","then","response","json","fetchedData","catch","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","stroke","dataKey","yAxisId","orientation","barSize","fill","type","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Line,\n  Area,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst TechJobStatsChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((fetchedData) => {\n        // Assuming your backend sends the data in an appropriate format\n        // Otherwise, adjust the processing logic here\n        setData(fetchedData);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  if (data.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <ComposedChart\n        data={data}\n        margin={{ top: 20, right: 30, left: 20, bottom: 0 }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"Category\" />\n        <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n        <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n        <Tooltip />\n        <Legend />\n        <Bar\n          yAxisId=\"left\"\n          dataKey=\"Hourly Median Wage\"\n          barSize={20}\n          fill=\"#413ea0\"\n        />\n        <Line\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"Median Gross Rent\"\n          stroke=\"#ff7300\"\n        />\n        <Line\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"Total Jobs in Tech Sector\"\n          stroke=\"#387908\"\n        />\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default TechJobStatsChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}