{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopulationGrowthChart = () => {\n  _s();\n  // Initialize state for storing fetched data\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data, then process it\n    fetch('http://localhost:5000/data').then(response => response.json()).then(data => {\n      const processedData = data.map(item => ({\n        ...item,\n        Population2010: parseFloat(item.Population2010),\n        Population2020: parseFloat(item.Population2020),\n        Population2022: parseFloat(item.Population2022)\n      }));\n      setData(processedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Optional: Render loading state or similar until data is fetched\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Population2010\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Population2020\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Population2022\",\n        stroke: \"#ffc658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PopulationGrowthChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = PopulationGrowthChart;\nexport default PopulationGrowthChart;\nvar _c;\n$RefreshReg$(_c, \"PopulationGrowthChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","PopulationGrowthChart","_s","data","setData","fetch","then","response","json","processedData","map","item","Population2010","parseFloat","Population2020","Population2022","catch","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/PopulationGrowthChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst PopulationGrowthChart = () => {\n  // Initialize state for storing fetched data\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data, then process it\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((data) => {\n        const processedData = data.map((item) => ({\n          ...item,\n          Population2010: parseFloat(item.Population2010),\n          Population2020: parseFloat(item.Population2020),\n          Population2022: parseFloat(item.Population2022),\n        }));\n        setData(processedData);\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  // Optional: Render loading state or similar until data is fetched\n  if (data.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"City\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"Population2010\" stroke=\"#8884d8\" />\n        <Line type=\"monotone\" dataKey=\"Population2020\" stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey=\"Population2022\" stroke=\"#ffc658\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default PopulationGrowthChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}