{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Legend, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDemographicsPieChart = ({\n  cityData\n}) => {\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  const demographicsData = [{\n    name: 'White population alone',\n    value: cityData['White population alone']\n  }, {\n    name: 'Native Hawaiian and Other Pacific Islander population alone',\n    value: cityData['Native Hawaiian and Other Pacific Islander population alone']\n  }, {\n    name: 'Population of Two or More Races',\n    value: cityData['Population of Two or More Races']\n  }, {\n    name: 'Hispanic or Latino population',\n    value: cityData['Hispanic or Latino population']\n  }];\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 250,\n    height: 250,\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: demographicsData,\n      dataKey: \"value\",\n      nameKey: \"name\",\n      cx: \"50%\",\n      cy: \"50%\",\n      outerRadius: 100,\n      fill: \"#8884d8\",\n      label: true,\n      children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = CityDemographicsPieChart;\nconst DemographicsPieCharts = () => {\n  _s();\n  const [citiesData, setCitiesData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => setCitiesData(jsonData)).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around'\n    },\n    children: citiesData.map(cityData => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: cityData.City\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CityDemographicsPieChart, {\n        cityData: cityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, cityData.City, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieCharts, \"nWytfSIjcq1outeTb10vBKltFEE=\");\n_c2 = DemographicsPieCharts;\nexport default DemographicsPieCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDemographicsPieChart\");\n$RefreshReg$(_c2, \"DemographicsPieCharts\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Legend","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","CityDemographicsPieChart","cityData","COLORS","demographicsData","name","value","width","height","children","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","map","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","DemographicsPieCharts","_s","citiesData","setCitiesData","fetch","then","response","json","jsonData","catch","error","console","style","display","flexWrap","justifyContent","margin","City","_c2","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Legend,\n  Cell,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst CityDemographicsPieChart = ({ cityData }) => {\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  const demographicsData = [\n    {\n      name: 'White population alone',\n      value: cityData['White population alone'],\n    },\n    {\n      name: 'Native Hawaiian and Other Pacific Islander population alone',\n      value:\n        cityData['Native Hawaiian and Other Pacific Islander population alone'],\n    },\n    {\n      name: 'Population of Two or More Races',\n      value: cityData['Population of Two or More Races'],\n    },\n    {\n      name: 'Hispanic or Latino population',\n      value: cityData['Hispanic or Latino population'],\n    },\n  ];\n\n  return (\n    <PieChart width={250} height={250}>\n      <Pie\n        data={demographicsData}\n        dataKey=\"value\"\n        nameKey=\"name\"\n        cx=\"50%\"\n        cy=\"50%\"\n        outerRadius={100}\n        fill=\"#8884d8\"\n        label\n      >\n        {demographicsData.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n      <Legend />\n    </PieChart>\n  );\n};\n\nconst DemographicsPieCharts = () => {\n  const [citiesData, setCitiesData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((jsonData) => setCitiesData(jsonData))\n      .catch((error) => console.error('Error fetching data: ', error));\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n      }}\n    >\n      {citiesData.map((cityData) => (\n        <div key={cityData.City} style={{ margin: '20px' }}>\n          <h3>{cityData.City}</h3>\n          <CityDemographicsPieChart cityData={cityData} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DemographicsPieCharts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}