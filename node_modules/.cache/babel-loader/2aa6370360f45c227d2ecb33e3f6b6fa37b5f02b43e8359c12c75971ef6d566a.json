{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChartComponent() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/population_data').then(response => response.json()).then(data => setPopulationData(data)).catch(error => console.error('Error fetching population data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 600,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(MyChartComponent, \"MNW7rnkI9oNPb711ySWHHHkbM9Y=\");\n_c = MyChartComponent;\nexport default MyChartComponent;\nvar _c;\n$RefreshReg$(_c, \"MyChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","MyChartComponent","_s","data","setData","fetch","then","response","json","catch","error","console","setPopulationData","width","height","margin","top","right","left","bottom","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n\nfunction MyChartComponent() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((data) => setData(data))\n      .catch((error) => console.error('Error:', error));\n  }, []);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/population_data')\n      .then((response) => response.json())\n      .then((data) => setPopulationData(data))\n      .catch((error) =>\n        console.error('Error fetching population data:', error)\n      );\n  }, []);\n\n  return (\n    <LineChart\n      width={600}\n      height={300}\n      data={data}\n      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"value\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n    </LineChart>\n  );\n}\n\nexport default MyChartComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAKS,iBAAiB,CAACT,IAAI,CAAC,CAAC,CACvCM,KAAK,CAAEC,KAAK,IACXC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACR,SAAS;IACRqB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZX,IAAI,EAAEA,IAAK;IACXY,MAAM,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAEnDpB,OAAA,CAACJ,aAAa;MAACyB,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCzB,OAAA,CAACN,KAAK;MAACgC,OAAO,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBzB,OAAA,CAACL,KAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTzB,OAAA,CAACH,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXzB,OAAA,CAACF,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACP,IAAI;MACHkC,IAAI,EAAC,UAAU;MACfD,OAAO,EAAC,OAAO;MACfE,MAAM,EAAC,SAAS;MAChBC,SAAS,EAAE;QAAEC,CAAC,EAAE;MAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACvB,EAAA,CAvCQD,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAyCzB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}