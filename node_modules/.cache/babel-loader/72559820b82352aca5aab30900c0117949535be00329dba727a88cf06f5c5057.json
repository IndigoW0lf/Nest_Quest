{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Tooltip, Legend, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemographicsPieChart = () => {\n  _s();\n  const [demographicsData, setDemographicsData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(jsonData => {\n      const demographicSums = jsonData.reduce((acc, city) => {\n        acc['White population alone'] += city['White population alone'] || 0;\n        acc['Native Hawaiian and Other Pacific Islander population alone'] += city['Native Hawaiian and Other Pacific Islander population alone'] || 0;\n        acc['Population of Two or More Races'] += city['Population of Two or More Races'] || 0;\n        acc['Hispanic or Latino population'] += city['Hispanic or Latino population'] || 0;\n        return acc;\n      }, {\n        'White population alone': 0,\n        'Native Hawaiian and Other Pacific Islander population alone': 0,\n        'Population of Two or More Races': 0,\n        'Hispanic or Latino population': 0\n      });\n      const transformedData = Object.keys(demographicSums).map(key => ({\n        name: key,\n        value: demographicSums[key]\n      }));\n      setDemographicsData(transformedData);\n    }).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: demographicsData,\n        dataKey: \"value\",\n        nameKey: \"name\",\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 150,\n        fill: \"#8884d8\",\n        label: true,\n        children: demographicsData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DemographicsPieChart, \"C1jVe6ll0cUxtXiJ9LYoj9Aq7O0=\");\n_c = DemographicsPieChart;\nexport default DemographicsPieChart;\nvar _c;\n$RefreshReg$(_c, \"DemographicsPieChart\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Tooltip","Legend","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","DemographicsPieChart","_s","demographicsData","setDemographicsData","fetch","then","response","json","jsonData","demographicSums","reduce","acc","city","transformedData","Object","keys","map","key","name","value","catch","error","console","COLORS","width","height","children","data","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/DemographicsPieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  PieChart,\n  Pie,\n  Tooltip,\n  Legend,\n  Cell,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst DemographicsPieChart = () => {\n  const [demographicsData, setDemographicsData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/data')\n      .then((response) => response.json())\n      .then((jsonData) => {\n        const demographicSums = jsonData.reduce(\n          (acc, city) => {\n            acc['White population alone'] +=\n              city['White population alone'] || 0;\n            acc[\n              'Native Hawaiian and Other Pacific Islander population alone'\n            ] +=\n              city[\n                'Native Hawaiian and Other Pacific Islander population alone'\n              ] || 0;\n            acc['Population of Two or More Races'] +=\n              city['Population of Two or More Races'] || 0;\n            acc['Hispanic or Latino population'] +=\n              city['Hispanic or Latino population'] || 0;\n            return acc;\n          },\n          {\n            'White population alone': 0,\n            'Native Hawaiian and Other Pacific Islander population alone': 0,\n            'Population of Two or More Races': 0,\n            'Hispanic or Latino population': 0,\n          }\n        );\n\n        const transformedData = Object.keys(demographicSums).map((key) => ({\n          name: key,\n          value: demographicSums[key],\n        }));\n\n        setDemographicsData(transformedData);\n      })\n      .catch((error) => console.error('Error fetching data: ', error));\n  }, []);\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <PieChart>\n        <Pie\n          data={demographicsData}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={150}\n          fill=\"#8884d8\"\n          label\n        >\n          {demographicsData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n        <Legend />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default DemographicsPieChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}