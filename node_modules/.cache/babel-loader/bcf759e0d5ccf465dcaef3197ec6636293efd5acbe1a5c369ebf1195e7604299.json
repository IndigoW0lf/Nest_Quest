{"ast":null,"code":"var _jsxFileName = \"/Users/indigowolf/workspace/where_to_live/frontend/src/components/Sidebar.js\";\nimport Slider from '@mui/material/Slider';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  filters,\n  setFilters,\n  cities\n}) => {\n  const handleIncomeChange = (event, newValue) => {\n    setFilters({\n      ...filters,\n      medianIncomeRange: newValue\n    });\n  };\n  const handleCityChange = selectedOptions => {\n    const newLocations = selectedOptions.map(option => option.value);\n    setFilters({\n      ...filters,\n      location: newLocations\n    });\n  };\n\n  // Assuming 'cities' is an array of city names for the checkboxes\n  const cityOptions = cities.map(city => ({\n    value: city,\n    label: city\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      value: filters.medianIncomeRange,\n      onChange: handleIncomeChange,\n      valueLabelDisplay: \"auto\",\n      min: 0,\n      max: 200000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      isMulti: true,\n      options: cityOptions,\n      onChange: handleCityChange,\n      classNamePrefix: \"select\",\n      placeholder: \"Select Cities\",\n      isClearable: true,\n      value: cityOptions.filter(option => filters.location.includes(option.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["Slider","Checkbox","FormControlLabel","Select","jsxDEV","_jsxDEV","Sidebar","filters","setFilters","cities","handleIncomeChange","event","newValue","medianIncomeRange","handleCityChange","selectedOptions","newLocations","map","option","value","location","cityOptions","city","label","children","onChange","valueLabelDisplay","min","max","fileName","_jsxFileName","lineNumber","columnNumber","isMulti","options","classNamePrefix","placeholder","isClearable","filter","includes","_c","$RefreshReg$"],"sources":["/Users/indigowolf/workspace/where_to_live/frontend/src/components/Sidebar.js"],"sourcesContent":["import Slider from '@mui/material/Slider';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Select from 'react-select';\n\nconst Sidebar = ({ filters, setFilters, cities }) => {\n  const handleIncomeChange = (event, newValue) => {\n    setFilters({ ...filters, medianIncomeRange: newValue });\n  };\n\n  const handleCityChange = (selectedOptions) => {\n    const newLocations = selectedOptions.map((option) => option.value);\n    setFilters({ ...filters, location: newLocations });\n  };\n\n  // Assuming 'cities' is an array of city names for the checkboxes\n  const cityOptions = cities.map((city) => ({ value: city, label: city }));\n\n  return (\n    <div>\n      <Slider\n        value={filters.medianIncomeRange}\n        onChange={handleIncomeChange}\n        valueLabelDisplay=\"auto\"\n        min={0}\n        max={200000}\n      />\n      <Select\n        isMulti\n        options={cityOptions}\n        onChange={handleCityChange}\n        classNamePrefix=\"select\"\n        placeholder=\"Select Cities\"\n        isClearable={true}\n        value={cityOptions.filter((option) =>\n          filters.location.includes(option.value)\n        )}\n      />\n      {/* Placeholder for additional filters based on your data */}\n    </div>\n  );\n};\n\nexport default Sidebar;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC9CJ,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAEM,iBAAiB,EAAED;IAAS,CAAC,CAAC;EACzD,CAAC;EAED,MAAME,gBAAgB,GAAIC,eAAe,IAAK;IAC5C,MAAMC,YAAY,GAAGD,eAAe,CAACE,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,KAAK,CAAC;IAClEX,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAEa,QAAQ,EAAEJ;IAAa,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGZ,MAAM,CAACQ,GAAG,CAAEK,IAAI,KAAM;IAAEH,KAAK,EAAEG,IAAI;IAAEC,KAAK,EAAED;EAAK,CAAC,CAAC,CAAC;EAExE,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACL,MAAM;MACLmB,KAAK,EAAEZ,OAAO,CAACM,iBAAkB;MACjCY,QAAQ,EAAEf,kBAAmB;MAC7BgB,iBAAiB,EAAC,MAAM;MACxBC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACF3B,OAAA,CAACF,MAAM;MACL8B,OAAO;MACPC,OAAO,EAAEb,WAAY;MACrBI,QAAQ,EAAEX,gBAAiB;MAC3BqB,eAAe,EAAC,QAAQ;MACxBC,WAAW,EAAC,eAAe;MAC3BC,WAAW,EAAE,IAAK;MAClBlB,KAAK,EAAEE,WAAW,CAACiB,MAAM,CAAEpB,MAAM,IAC/BX,OAAO,CAACa,QAAQ,CAACmB,QAAQ,CAACrB,MAAM,CAACC,KAAK,CACxC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACQ,EAAA,GApCIlC,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}